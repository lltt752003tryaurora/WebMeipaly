* {
    margin:0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Oswald', sans-serif;
}

.container {
    margin: 0 auto;
    max-width: 1140px;
}

/* header */
/* Cách để header đè lên banner
tạo 1 thẻ div header_content để bọc lại rồi cho thuộc tính position
vào header
lúc này header sẽ nhận body làm thẻ cha và di chuyển
=> khi đó header đè lên đc banner
*/

header {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    /* có z-index khi có thuộc tính position */
    z-index: 9;
    
}

header .header_content{
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 40px 0;
}

header nav ul li {
    display: inline;
    /* 
    display-flex => giúp các phần tử nằm trên cùng một dòng
    để ở thẻ cha của các phẩn tử cần chỉnh
    justify-content:(trục chính-ngang) 
    align-items:(trục phụ-dọc)
    */
}

header a {
    text-decoration: none;
    color: white;
}

header .header_content .header_logo {
    font-size: 30px;
}

header .header_content nav li {
    margin-right: 30px;
    text-transform: uppercase;
    /*text-transform: capitalize -> viết hoa chữ cái đầu */
}

header .header_content nav li a {
    transition: all 0.5s;
}

header .header_content nav li a:hover {
    color: red;
}

/* banner */

/* thuộc tính postition khi không có thẻ cha thì tự động nhận 
body là thẻ cha của nó */

.banner {
    background-image: url(../img/home_slider.jpg);
    /* thường dùng với đơn vị vh để hiện thị trên nhiều máy có 
    màn hình khác nhau */
    height: 70vh;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    position: relative;
}


/* cách 1: (dùng flex và ý tưởng về height) để chỉnh nội dung trong banner_content ra giữa banner */
.banner .banner_content {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    /* //Chỉnh height: 100% để thẻ banner_content có chiều cao bằng thẻ cha là banner */
    height: 100%;
    /* // dùng cách này khi ta muốn phủ 1 lớp mờ bg ở sau nội dung */
    /* background-color: rgba(0, 0, 0, 0.138); */
    color: white;
    text-align: center;    

}


/* cách 2: dùng position: để chỉnh nội dung trong banner_content ra giữa banner*/

/* .banner .banner_content {
    position:absolute;
    top: 50%; 
    left: 50%;
    // truyền vào giá trị đối của top, left để đưa nội dung vào giữa khi dùng thuộc tính transform
    - nếu không dùng transform thì nội dung sẽ chưa đi vào giữa
    transform: translate(-50%,-50%);
    // lúc này sẽ bị lỗi hiển thị (header đang bị đè lên bởi banner)
    ta sẽ thêm thuộc tính z-index vào header
} */

.banner .banner_content .sub_title {
    font-size: 25px;

}

.banner .banner_content h1 {
    font-size: 75px;
    line-height: 90px;
}

.banner .banner_content button {
    background-color: #e62b4a;
    padding: 15px 25px;
    border: none;
    color: white;
    text-transform: uppercase;
    font-size: 16px;
    transition: all 0.5s;
    cursor: pointer;
}

.banner .banner_content button:hover {
    background-color: #af2239;
}

.banner .banner_content i {
    /* animation-name: dùng để gọi animation ra  */
    /* aniamtion-duration: dùng để xđ khoảng time animation diễn ra */
    /* animation-iteration-count: dùng để xđ số lần lặp lại hiệu ứng*/
    margin-top: 50px;
    font-size: 30px;
    animation-name: arrowGoDown;
    animation-duration: 1s;
    animation-iteration-count: infinite;
}

@keyframes arrowGoDown {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        transform: translateY(60px);
        opacity: 0;
    }
}

/* services */

.services {
    background-color: black;
    color: white;
    padding: 60px 0;
    text-align: center;
}

.services .services_title .sub_title {
    color: #e62b4a;
}

.services .services_title h2 {
    font-size: 40px;
}

.services .services_title p:last-child {
    color: gray;
    font-weight: 700;
}

.services .services_content .services_item {
    padding: 0 10px;
}

.services .services_content .services_item .item_bg {
    background-color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    color:grey;
    flex-direction: column;
    height: 200px;
    position: relative;
}

.services .services_item .item_bg i {
    font-size: 50px;

}

.services .services_item .item_bg p {
    text-transform: uppercase;
}

.services .services_item .item_bg::after {
    /* content: là thuộc tính bắt buộc */
    content: "";
    width: 3px;
    height: 0;
    background-color:#e62b4a;
    position: absolute;
    top: 0;
    right: 0;
    transition: all 0.5s;
}

.services .services_item .item_bg:hover::after {
    /* gọi đến thẻ item_bg khi hover vào nó thì sẽ chỉnh sửa after */
    height: 100%; 
}

.services .slick-dots li button::before {
    font-size: 14px;
    color: white;
}

.services .slick-dots li button:before {
    color: #e62b4a;
}

.services .slick-dots {
    bottom: -50px;
}

/* posts */
.posts {
    padding: 60px 0;
    text-align: center;
}

.posts .posts_title .sub_title {
    color: gray;
}

.posts .posts_title h2 {
    font-size: 40px;
}

.posts .posts_title p:last-child {
    font-weight: 700;
    color: gray;
}

.posts .posts_content {
    display: grid;
    /* display: grid dùng để chia lưới các phẩn tử con */
    grid-template-columns: repeat(4,1fr);
    /* giá trị fr sẽ cho ra các cột có giá trị tương ứng */
    /* gap là khoảng cách những phần tử con trong grid (lưới) 
    và gap có thể được dùng với flex
    */
    gap: 15px;
}

.posts .posts_content .post_item img {
    /* chỉnh width và height 100% để thẻ con vừa với thẻ cha */
    width: 100%;
    height: 100%;
    filter: grayscale(50%) contrast(50%); 
}

.posts .posts_content .post_item:first-child {
    /* grid-column nhận vào giá trị đầu là vị trí cột chúng ta muốn gom lại 
    giá trị sau là số lượng cột để gộp vào
    */
    /* grid-row nhận vào giá trị đầu là vị trí dòng chúng ta muốn gom lại 
    giá trị sau là số lượng cột để gộp vào */
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
   
   
}

.posts .posts_content .post_item:first-child img {
     /* object-fit: cover -> giúp hình ko bị kéo dài hay bị co, và được căn chỉnh cho đẹp */
     object-fit: cover;
}

.posts .posts_content .post_item:nth-child(8) {
    grid-column: 3 / span 2;
    grid-row: 3 / span 2;
}

.posts .posts_content .post_item {
    position: relative;
    /* để ẩn những phần bị tràn ra ngoài nội dung */
    overflow: hidden;   
}

.posts .posts_content .post_item .overlay {
    position: absolute;
    /* Muốn chỉnh width và height 100% như thằng cha thì cho 4 hướng đều giá trị 0 */
    top:0;
    left:0;
    right:0;
    bottom: 0;
    /* vì thẻ img được gọi sau thẻ overlay nên img sẽ đè lên thẻ overlay
    Lúc này, ta chỉ cần thêm z-index vào overlay để nó hiển thị lên*/
    z-index: 99;
    display: flex;
    /* Đổi thành trục dọc */
    flex-direction: column;
    /* Đưa 2 nội dung icon và text ra trên và dưới */
    justify-content: space-between;
    background-color: rgb(230 43 74 / 60%);
    padding: 20px;
    align-items: flex-start;
    opacity: 0;
    transition: all 0.5s;
}

.posts .post_item .overlay .overlay_icon {
    width: 100%;
    /* cho width 100% để có chiều rộng bằng thẻ cha, giúp căn chỉnh text-align: right */
    text-align: right;
}

.posts .post_item .overlay_icon a {
    background-color: white;
    /* Thẻ inline ko thể chỉnh width và height được */
    /* Thẻ inline-block thì chỉnh được */
    display: inline-block;
    width: 40px;
    height: 40px;
    line-height: 40px;
    text-align: center;
    /* Cách khác để căn giữa */
    /* display: flex;
    justify-content: center;
    align-items: center;
    margin-left:auto; */
    color: black;
    transform: translateY(20px);
    transition: all 0.5s;
}

.posts .post_item .overlay_text {
    text-align: left;
    text-transform: uppercase;
    transform: translateY(20px);
    transition: all 0.5s;
}

.posts .post_item .overlay_text p {
    color:gray;
}

.posts .post_item .overlay_text h3 {
    color: white;
}

.posts .post_item:hover .overlay {
    opacity: 1;
}

.posts .post_item:hover .overlay_icon a {
    transform: translateY(0);
}

.posts .post_item:hover .overlay_text {
    transform: translateY(0);
}

/* numbers */

.numbers {
 background-color: #000;
 padding: 100px 0;
 color: white;  
}

.numbers .numbers_content {
    display: flex;
    /* justify-content: space-evenly; */
}

.numbers .numbers_content .numbers_item {
    /* Cách khác để cách đều từng item nếu ko dùng justify-content: space-evenly*/
    width: calc(100%/4);
    /* nếu để width: 100% thì khi mà ta chỉnh sửa rất khó
    Vd như dùng thuộc tính wrap trong flex */
    text-align: center;
}

.numbers .numbers_content .numbers_item h3 {
    font-size: 60px;
    font-weight: 300;
}

.numbers .numbers_content .numbers_item p {
    font-size: 20px;
    color: #888888;
}


/* experience */

.exp {
    background-image: url(../img/bussiness_img_1.jpg);
    /* bg-attachment: -> hình được đính lại */
    background-attachment: fixed;
    padding: 100px 0;
    text-align: center;
}

.exp .exp_title .sub_title {
    color: #e62b4a;
    font-size: 14px;
}

.exp .exp_title h2 {
    color: white;
    font-size: 50px;
}

.exp .exp_title p:last-of-type {
    color: #888888;
    font-size: 16px;
    font-weight: 700;
    margin-top: 20px;
}

/* contact */

.contact {
    padding: 100px 0;
    text-align: center;

}

.contact .contact_title h2 {
    font-size: 50px;
    color: black;
    font-weight: 400;
}

.contact .contact_title p {
    font-weight: 400;
    color: #888888;
    margin-top: 20px;
}

.contact .contact_content {
    display: flex;
    gap: 15px;
}

.contact .contact_content .content_left {
    width: 60%;
}

.contact .contact_content .content_right {
    width: 40%;
}

.contact .contact_content .content_right form {
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: space-between;
}

.content_right form input, textarea {
    padding: 15px;
}

.content_right form button {
    background-color: black;
    color: white;
    padding: 20px 0;
    border: none;
    letter-spacing: 1px;
    transition: all 0.5s;
}

.content_right form button:hover {
    background-color: #e62b4a;
    border-color: #e62b4a;
}


/* footer */

footer {
    background-color: black;
    color: white;
}

.footer_content {
    display:flex;
    justify-content: space-between;
    align-items: center;
    padding: 100px 0;
}

.footer_content p {
    font-size: 14px;
}

.footer_content a {
    width: 54px;
    height: 54px;
    line-height: 54px;
    text-align: center;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    text-decoration: none;
    color: white;
    display: inline-block;
    margin-left: 5px;
    transition: all 0.5s;
}

.footer_content a:hover {
    background-color: #e62b4a;
}


/* button backToTop */
.backToTop{
    width: 60px;
    height: 60px;
    line-height: 60px;
    border-radius: 4px;
    text-align: center;
    background: rgba(0,0,0,0.25);
    font-weight: bold;
    color: #fff;    
    position: fixed;
    bottom: 20px;
    right: 20px;
    font-size: 20px;

    visibility: hidden;
    opacity: 0;
}

.cd-top--is-visible { 
    visibility: visible;
    opacity: 1;
}





